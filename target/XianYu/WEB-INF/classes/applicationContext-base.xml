<?xml version="1.0" encoding="UTF-8"?>
<beans 
		xmlns="http://www.springframework.org/schema/beans" 
		xmlns:context="http://www.springframework.org/schema/context"
		xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xsi:schemaLocation="
				http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd 
				http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		
		">
		<!-- 1.扫描service层实现类包 -->
		<context:component-scan base-package="service.impl"/>
		<!-- 2.读取properties文件 -->
		<context:property-placeholder location="classpath:dataSource.properties"/>
		<!-- 3.配置数据源 dataSource(使用德鲁伊) -->
		<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
			<property name="driverClassName" value="${jdbc.driverClassName}"/>
			<property name="url" value="${jdbc.url}"/>
			<property name="username" value="${jdbc.username}"/>
			<property name="password" value="${jdbc.password}"/>
			<property name="initialSize" value="5"/>
			<property name="maxActive" value="10"/>
		</bean>
		<!-- Spring整合Mybatis 4.配置SqlSessionFactory -->
		<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 4.1 注入数据源 -->
			<property name="dataSource" ref="dataSource"/>
			<!-- 4.2 配置javabean的别名  -->
			<property name="typeAliasesPackage" value="entity"/>
			<!-- 4.3 注册mapper文件 -->
			<property name="mapperLocations">
				<list>
					<value>classpath:mapper/*.xml</value>
				</list>
			</property>
			<!-- 4.4 引入另一个xml文件, 例如: mybatis-config.xml -->
			<property name="configLocation" value="classpath:mybatis-config.xml"/>
		</bean>
		<!-- 5.配置mapperscannerconfigurer(与mybatis整合需要) -->
		<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
			<property name="basePackage" value="dao"/>
		</bean>
</beans>
